/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.3/userguide/building_swift_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

pluginManagement {
    repositories {
//        gradlePluginPortal()
//        google()
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
}


plugins {
    // Apply the foojay-resolver plugin to allow automatic download of JDKs
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.4.0'
//    id("io.spring.dependency-management") version "1.1.6" todo 学习如何使用 dependency-management 进行版本控制
}


dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)

    repositories {
//        mavenCentral()

        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }
}

rootProject.name = 'gradle-tutorial'

//include('platform')
//include('app')
//include('lib')


rootDir.listFiles().toList().stream().filter {
    f -> f.isDirectory() && new File(f, "build.gradle").exists() && !f.getName().equals('buildSrc')
}.forEach { f -> {
    include(f.name)
}}



include('app')
project(':app').buildFileName = 'app.gradle'

includeBuild('gradle/license-plugin')

println 'This is executed during the initialization phase.'


